{"id":"node_modules/inquirer/lib/utils/utils.js","dependencies":[{"name":"D:\\personal\\Node-build-blockchain\\package.json","includedInParent":true,"mtime":1620869816151},{"name":"D:\\personal\\Node-build-blockchain\\node_modules\\inquirer\\package.json","includedInParent":true,"mtime":1620524513151},{"name":"lodash","loc":{"line":2,"column":16},"parent":"D:\\personal\\Node-build-blockchain\\node_modules\\inquirer\\lib\\utils\\utils.js","resolved":"D:\\personal\\Node-build-blockchain\\node_modules\\inquirer\\node_modules\\lodash\\index.js"},{"name":"rx-lite","loc":{"line":3,"column":17},"parent":"D:\\personal\\Node-build-blockchain\\node_modules\\inquirer\\lib\\utils\\utils.js","resolved":"D:\\personal\\Node-build-blockchain\\node_modules\\rx-lite\\rx.lite.js"},{"name":"run-async","loc":{"line":4,"column":23},"parent":"D:\\personal\\Node-build-blockchain\\node_modules\\inquirer\\lib\\utils\\utils.js","resolved":"D:\\personal\\Node-build-blockchain\\node_modules\\run-async\\index.js"}],"generated":{"js":"'use strict';\nvar _ = require('lodash');\nvar rx = require('rx-lite');\nvar runAsync = require('run-async');\n\n\n/**\n * Create an oversable returning the result of a function runned in sync or async mode.\n * @param  {Function} func Function to run\n * @return {rx.Observable} Observable emitting when value is known\n */\n\nexports.createObservableFromAsync = function (func) {\n  return rx.Observable.defer(function () {\n    return rx.Observable.create(function (obs) {\n      runAsync(func, function (value) {\n        obs.onNext(value);\n        obs.onCompleted();\n      });\n    });\n  });\n};\n\n\n/**\n * Resolve a question property value if it is passed as a function.\n * This method will overwrite the property on the question object with the received value.\n * @param  {Object} question - Question object\n * @param  {String} prop     - Property to fetch name\n * @param  {Object} answers  - Answers object\n * @...rest {Mixed} rest     - Arguments to pass to `func`\n * @return {rx.Obsersable}   - Observable emitting once value is known\n */\n\nexports.fetchAsyncQuestionProperty = function (question, prop, answers) {\n  if (!_.isFunction(question[prop])) {\n    return rx.Observable.return(question);\n  }\n\n  return exports.createObservableFromAsync(function () {\n    var done = this.async();\n    runAsync(question[prop], function (value) {\n      question[prop] = value;\n      done(question);\n    }, answers);\n  });\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/inquirer/lib/utils/utils.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"node_modules/inquirer/lib/utils/utils.js":"'use strict';\nvar _ = require('lodash');\nvar rx = require('rx-lite');\nvar runAsync = require('run-async');\n\n\n/**\n * Create an oversable returning the result of a function runned in sync or async mode.\n * @param  {Function} func Function to run\n * @return {rx.Observable} Observable emitting when value is known\n */\n\nexports.createObservableFromAsync = function (func) {\n  return rx.Observable.defer(function () {\n    return rx.Observable.create(function (obs) {\n      runAsync(func, function (value) {\n        obs.onNext(value);\n        obs.onCompleted();\n      });\n    });\n  });\n};\n\n\n/**\n * Resolve a question property value if it is passed as a function.\n * This method will overwrite the property on the question object with the received value.\n * @param  {Object} question - Question object\n * @param  {String} prop     - Property to fetch name\n * @param  {Object} answers  - Answers object\n * @...rest {Mixed} rest     - Arguments to pass to `func`\n * @return {rx.Obsersable}   - Observable emitting once value is known\n */\n\nexports.fetchAsyncQuestionProperty = function (question, prop, answers) {\n  if (!_.isFunction(question[prop])) {\n    return rx.Observable.return(question);\n  }\n\n  return exports.createObservableFromAsync(function () {\n    var done = this.async();\n    runAsync(question[prop], function (value) {\n      question[prop] = value;\n      done(question);\n    }, answers);\n  });\n};\n"},"lineCount":48}},"error":null,"hash":"50eb30d1fe61e585b75cc63ee7741c83","cacheData":{"env":{}}}